{"title":"JQ无缝滚动","uid":"3ebfe667b3a28051893c08a8855b6747","slug":"JQ无缝滚动","date":"2014-12-10T06:45:05.000Z","updated":"2015-05-20T03:18:18.000Z","comments":true,"path":"api/articles/JQ无缝滚动.json","cover":null,"content":"<p>无缝滚动主要是在最后一张图添加第一张图和第一张图添加最后一张来，当图片滚动的marginleft值小于真实的最后到一张时（最后一张后面添加的第一张），就移动到第一张；当图片滚动的marginleft值大于真实第一张时（第一张前面添加的最后一张），就移动到最后一张。 视觉上看起来就是无缝滚动了。实现原理还有很多，直接上代码了。</p>\n<span id=\"more\"></span>\n\n<pre><code>&lt;!docType html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;meta charset=&quot;utf-8&quot;/&gt;\n\n&lt;style&gt;\nbody,ul,li&#123;\nmargin: 0;\npadding: 0;\n&#125;\n.wrap &#123;\nwidth: 520px;\nheight: 298px;\noverflow: hidden;\nmargin: 120px auto;\nborder: 1px solid deepskyblue;\nposition: relative;\n&#125;\n.wrap ul li &#123;\nfloat: left;\ndisplay: inline;\nwidth: 520px;\n&#125;\n.wrap ul li img &#123;\nwidth: 100%;\nheight: auto;\n&#125;\n.wrap .page &#123;\nposition: absolute;\nbottom: 10px;\nleft: 50%;\ntransform: translateX(-50%);\n-webkit-transform: translateX(-50%);\n&#125;\n.page ul li &#123;\nfloat: left;\nwidth: 10px;\nheight: 10px;\nborder-radius: 100%;\nbackground: #333;\nmargin-right: 10px;\nborder: 1px solid #fff;\n&#125;\n.page ul li.curr &#123;\nbackground: #f38630;\n&#125;\n.prev, .next &#123;\nposition: absolute;\ntop: 50%;\nmargin-top: -20px;\nwidth: 40px;\nheight: 40px;\nbackground: rgba(0, 0, 0, 0.7);\ntext-align: center;\nline-height: 40px;\ncolor: #ffffff;\ncursor: pointer;\n&#125;\n.prev &#123;\nleft: 10px;\n&#125;\n.next &#123;\nright: 10px;\n&#125;\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;wrap&quot;&gt;\n&lt;div class=&quot;goods-list&quot;&gt;\n&lt;ul class=&quot;clearfix&quot; style=&quot;margin-left: -520px&quot;&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-4.jpg&quot; alt=&quot;&quot;/&gt;4\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-1.jpg&quot; alt=&quot;&quot;/&gt;1\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-2.jpg&quot; alt=&quot;&quot;/&gt;2\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-3.jpg&quot; alt=&quot;&quot;/&gt;3\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-4.jpg&quot; alt=&quot;&quot;/&gt;4\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-1.jpg&quot; alt=&quot;&quot;/&gt;1\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;page&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li class=&quot;curr&quot;&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;prev&quot;&gt;左&lt;/div&gt;\n&lt;div class=&quot;next&quot;&gt;右&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=&quot;../js/jquery-2.1.1.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n$(function () &#123;\nvar goodsList = $(&quot;.goods-list&quot;);\nvar goodsListUl = goodsList.find(&quot;ul&quot;);\nvar liLength = goodsList.find(&quot;li&quot;).length;\nvar liWidth = goodsList.find(&quot;li&quot;).width();\nvar ulWidth = $(&quot;.goods-list ul&quot;).width(liLength * liWidth);\nvar index = 0;\nvar animated = true;\nvar timer;\n$(&quot;.page li&quot;).each(function (i, obj) &#123;\n$(obj).on(&quot;click&quot;, function () &#123;\nif ($(obj).hasClass(&quot;curr&quot;)) &#123;\nreturn;\n&#125; else &#123;\nif (animated) &#123;\n$(obj).addClass(&quot;curr&quot;).siblings().removeClass(&quot;curr&quot;);\nvar currIndex = i;\nconsole.log(i)\nvar offset = (-520) * (currIndex - index)\nindex = currIndex;\nanimate(offset);\n&#125;\n&#125;\n&#125;)\n&#125;);\n\nvar next= $(&quot;.next&quot;).on(&quot;click&quot;, function () &#123;\nmove();\n&#125;);\n$(&quot;.prev&quot;).on(&quot;click&quot;, function () &#123;\nif (animated) &#123;\nif (index == 0) &#123;\nindex = 3;\n&#125; else &#123;\nindex -= 1;\n&#125;\n$(&quot;.page li&quot;).eq(index).addClass(&quot;curr&quot;).siblings().removeClass(&quot;curr&quot;);\nanimate(520);\n&#125;\n&#125;);\nfunction move()&#123;\nif (animated) &#123;\nif (index == 3) &#123;\nindex = 0;\n&#125; else &#123;\nindex += 1;\n&#125;\n$(&quot;.page li&quot;).eq(index).addClass(&quot;curr&quot;).siblings().removeClass(&quot;curr&quot;);\nanimate(-520);\n&#125;\n&#125;\n\n\nfunction animate(offset) &#123;\nanimated = false;\nvar marginL = parseInt(goodsListUl.css(&quot;marginLeft&quot;)) + offset;\n\ngoodsListUl.animate(&#123;\n\nmarginLeft: marginL\n&#125;, 1000, function () &#123;\n                animated = true;\nif (marginL &lt; -2080) &#123;\ngoodsListUl.css(&#123;marginLeft: -520&#125;)\n&#125;\n                if (marginL &gt; -520) &#123;\ngoodsListUl.css(&#123;marginLeft: -2080&#125;)\n&#125;\ndebugger;\n&#125;);\n\n&#125;\nfunction play()&#123;\ntimer=setInterval(move,3000);\n&#125;\nplay();\ngoodsList.on(&#123;mouseover:function()&#123;\n            clearInterval(timer)\n&#125;,mouseout:function()&#123;\nplay()\n&#125;\n&#125;)\n&#125;)\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n","feature":null,"text":"无缝滚动主要是在最后一张图添加第一张图和第一张图添加最后一张来，当图片滚动的marginleft值小于真实的最后到一张时（最后一张后面添加的第一张），就移动到第一张；当图片滚动的marginleft值大于真实第一张时（第一张前面添加的最后一张），就移动到最后一张。 视觉上看起来就...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"技术","slug":"技术","count":7,"path":"api/categories/技术.json"}],"tags":[{"name":"JQ DOM","slug":"JQ-DOM","count":1,"path":"api/tags/JQ-DOM.json"}],"toc":"","author":{"name":"Lu-ckYoung","slug":"blog-author","avatar":"/img/touxiang.png","link":"","description":"API调用者，轮子搬运工，理论CV开发者，智慧意味着自知无知","socials":{}},"mapped":true,"prev_post":{"title":"“测试发表一篇文章 \"","uid":"173bb201a568b26685f963f5ce4c2287","slug":"测试一篇文章","date":"2015-01-22T05:11:11.000Z","updated":"2015-01-28T03:41:45.000Z","comments":true,"path":"api/articles/测试一篇文章.json","cover":null,"text":"@（测试markdown)[测试]markdown##markdown简介 markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— [维基百科] 代码块@requires_authorization def so...","link":"","photos":[],"count_time":{"symbolsCount":485,"symbolsTime":"1 mins."},"categories":[{"name":"测试","slug":"测试","count":1,"path":"api/categories/测试.json"}],"tags":[],"author":{"name":"Lu-ckYoung","slug":"blog-author","avatar":"/img/touxiang.png","link":"","description":"API调用者，轮子搬运工，理论CV开发者，智慧意味着自知无知","socials":{}}},"next_post":{"title":"JS clientX,offsetX,screenX,PageX","uid":"05b5d7864f9e3058e6a04eb42e9cfd12","slug":"JS-clientX-offsetX-screenX-PageX","date":"2014-09-10T07:36:26.000Z","updated":"2015-08-06T11:09:37.000Z","comments":true,"path":"api/articles/JS-clientX-offsetX-screenX-PageX.json","cover":[],"text":"event对象是JavaScript中最重要的对象之一，他代表了各种事件的状态，在各种事件的事件处理中经常用到。 用js做拖拽、弹出层、什么之类的少不了用到js的event对象计算位置什么的。先来说说##screenX看看官方解释：screenX 事件属性可返回事件发生时鼠标指针...","link":"","photos":[],"count_time":{"symbolsCount":551,"symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":7,"path":"api/categories/技术.json"}],"tags":[{"name":"JS DOM Event","slug":"JS-DOM-Event","count":1,"path":"api/tags/JS-DOM-Event.json"}],"author":{"name":"Lu-ckYoung","slug":"blog-author","avatar":"/img/touxiang.png","link":"","description":"API调用者，轮子搬运工，理论CV开发者，智慧意味着自知无知","socials":{}}}}