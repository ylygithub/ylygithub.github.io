[{"id":"744320d336dd9691a06a6b092ab44fd0","title":"新主题","content":"test ‘new theme2’ \n","slug":"新主题","date":"2021-04-06T10:39:44.000Z","categories_index":"","tags_index":"","author_index":"Lu-ckYoung"},{"id":"61ed0a32d1ded2ca7977940e499dedf6","title":"面试题解答持续跟新","content":"答案：##DOCTYPE的作用？严格模式与混杂模式，如何触发？\n\n作用：&lt;!DOCTYPE&gt; 声明位于文档中的最前面，处于  标签之前。告知浏览器的解析器，用什么文档类型规范来解析这个文档。严格模式与混杂模式:当浏览器厂商开始创建与标准兼容的浏览器时，他们希望确保向后兼容性。为了实现这一点，他们创建了两种呈现模式：严格（标准）模式(strict mode)和混杂模式(Quirks mode)。在严格（标准）模式中，浏览器根据规范呈现页面；在混杂模式中，页面以一种比较宽松的向后兼容的方式显示。混杂模式通常模拟老式浏览器（比如Microsoft IE 4和Netscape Navigator 4）的行为以防止老站点无法工作。如何触发这两种模式:浏览器根据DOCTYPE是否存在以及使用的哪种DTD来选择要使用的呈现方法。如果XHTML文档包含形式完整的    DOCTYPE，那么它一般以标准模式 呈现。对于HTML 4.01文档，包含严格DTD的DOCTYPE常常导致页面以标准模式呈现。包含过渡DTD和URI的DOCTYPE也导致页面以标准模式呈现，但是有过 渡DTD而没有URI会导致页面以混杂模    式呈现。DOCTYPE不存在或形式不正确会导致HTML和XHTML文档以混杂模式呈现。\n\n##HTML语义化，以及好处。HTML是提供网页文档内容的上下文结构和含义；html本身是没有表现的，我们看到例如&lt;h1&gt;是粗体，字体大小2em，加粗；&lt;strong&gt;是加粗的，不要认为这是html的表现，这些其实html默认的css样式在起作用，所以首先我们要知道html和页面的表现是没有关系的，这些是css的事情。HTML在页面中的作用就是结构和含义，通俗点说就是划分内容，这里放什么，我们放的是什么。语义化的HTML结构到底有什么好处？我们知道HTML5新增的标签，比如&lt;header&gt;和&lt;footer&gt;，html正在朝着更加健壮的语义化的HTML结构发展，xhtml2在这点上没html5先进，这也是xhtml2死亡的一个原因，这一点也说明了语义化的HTML结构是html的发展趋势。简单总结下有以下几点：1.去掉或样式丢失的时候能让页面呈现清晰的结构。2.屏幕阅读器（如果访客有视障）会完全根据你的标记来“读”你的网页。3.便于团队开发和维护。4.搜索引擎的爬虫也依赖于标记来确定上下文和各个关键字的权重。\n\n##HTML5新增的几个标签，flash和HTML5的优缺点。(header,nav,footer,aside,article,section,video,audio,progress等等)HTML5 与 Flash 这个争论由来已久，Flash被某些开发设计者滥用导致一些网页加载缓慢，而HTML5为之带来一线曙光。相对于移动设备用户来说，ios设备用户可能会 从HTML5获得更多好处，因为苹果一直不愿支持Flash。\n\n##对WEB标准的理解。Web标准不是某一个标准，而是由一系列标准组合而成。网页主要由三部分组成：结构、表现和行为。对应的标准也分三方面：结构化标准语言主要包括XHTML和HTML以及XML，表现标准语言主要包括CSS，行为标准主要包括对象模型（如W3C DOM）、ECMAScript等。\n\n##什么是web components？Web Components 的核心思想就是把 UI 元素组件化，即将 HTML、CSS、JS 封装起来，使用的时候就不需要这里贴一段 HTML，那里贴一段样式，最后再贴一段 JS 了。一般来说，它其实是由四个部分的功能组成的：1.模板，&lt;template&gt; 标签2.自定义元素3.Shadow DOM（隐匿 DOM）4.Imports（导入）\n","slug":"面试题解答持续跟新","date":"2015-12-10T12:24:46.000Z","categories_index":"技术","tags_index":"面试","author_index":"Lu-ckYoung"},{"id":"53163e64deb081394429306e02881551","title":"前端各类面试问题","content":"\n    DOCTYPE的作用？严格模式与混杂模式，如何触发？\n    HTML语义化，以及好处。\n    HTML5新增的几个标签，flash和HTML5的优缺点。\n    对WEB标准的理解。\n    什么是web components？\n    HTTP请求有哪几种方法？HTTP报文理解一下。HTTP握手？HTTP的\n    ajax是什么？由哪几种技术组成？ajax的优缺点？服务器怎么判断请求是一个ajax请求？不同浏览器之间创建xhr 差异？\n    浏览器的缓存策略，啥是协商缓存？\n    HTTP状态码，200 302 304 403 404 500….\n    cookie是什么？如何设置cookie，如何删除cookie，如何设置cookie 的存在时间？cookie优化？session是什么？cookie和session的区别。session的实现原理？如果浏览器禁用了cookie，session怎么实现的？（java中的servlet的生命周期？）\n    从用户在浏览器里面输入地址敲击回车到页面完全展示出来经历了哪些过程，越详细越好。\n    什么是跨域？跨域的解决方法？\n    json是什么，用json描述一段话：有一个小男孩，他的名字叫小明，他的头发颜色是黑色的，会弹钢琴，他的好朋友有 小红、小华、小东。\n    HTML 和 XHTML 、HTML5 简要 谈谈区别。\n    块级元素、行内元素，行内块级元素？分别说几个标签。\n    location.href location.host location.pathname location.search location.hash是什么？\n    form 的 action target 是什么？如何遍历form里面的元素？input有哪几种？分别怎么获取值？fmethod有哪几种？如何异步提交form？\n    如何延迟加载js？\n    dom ready 和 window.onload的区别？jq是怎么实现dom ready的？\n    IE6下如何将突出来的select遮住？IE6常见的几个bug和解决方法？如何让IE6支持position:fixed？zoom是啥？IE6如何设置高为1px 的div？\n    如何创建一个元素？如何创建一个script？iframe呢？style呢？tagName tagType nodeName nodeValue是啥子？\n    css中position、display有哪些？position 中 relative 和 absolute的区别？\n    如何动态插入css和js？\n    window.open是啥？如何在open之后的页面刷新父页面？如何防止浏览器阻止window.open？window.opener是个啥\n    如果没有ajax，你将如何异步更新页面呢？\n    attribute什么？  property是什么？jq中的attr 和 prop的区别？\n    如何实现一个可编辑的select？\n    什么是行为与结构分离？什么是表现与结构分离？前后端分离？\n    简述一下MVC是个啥？有啥好处？MVVM是个啥？对backbone angular 了解吗？\n    对jq了解多少？jq链式操作的原理？eq 、get的区别？如何获得jq获取到的元素的原生对象？\n    什么是异步调用？什么是回调函数？如何解决异步回调函数金字塔？promise？defered?\n    script标签中 defer是什么？async是什么？区别？\n    CSS如何实现元素绝对居中呢？如何实现单行文本垂直居中？多行文本垂直居中？未知图片垂直居中。\n    简述一下 CSS BFC是什么？\n    CSS盒子模型？IE盒子和标准盒子的差异？CSS3中的 flex box？\n    margin负值简单的几个应用？\n    如何实现汉字两端对齐？比如  “用户名” 和 “密码” 对齐。\n    子元素float 的时候，如何防止高度塌陷？\n    margin重叠的原理？\n    querySelector 和 querySelectorAll是什么？区别？\n    CSS选择器的优先级？简述一下css hack？有哪几种？IE6 IE7等，属性前缀 -webkit- -o- -ms-\n    CSS3中，实现动画的方式有几种？\n    HTML5本地存储？ 可以用来做什么？\n    amd cmd 规范？区别？\n    模块化开发？CSS模块化开发？\n    innerHTML，innerText，outerHTML,nodeValue\n    简单回答一下box-sizing。\n    简单介绍下jquery 的动画队列、jquery的selector原理。jquery extend\n    原生js中只有insertBefore,请问insertAfter怎么实现，有的浏览器不支持outerHTML，模拟一个outerHTML。\n    reapp ionic angular less gulp react vue.js koajs requirejs seajs\n    栅格布局\n    行内元素如何设置宽高？有几种方法？\n    解释下css sprite\n    简述一下css hack。\n\n\n","slug":"前端各类面试问题总结","date":"2015-12-06T14:57:25.000Z","categories_index":"技术","tags_index":"面试题","author_index":"Lu-ckYoung"},{"id":"173bb201a568b26685f963f5ce4c2287","title":"“测试发表一篇文章 \"","content":"@（测试markdown)[测试]markdown##markdown简介\n\n\nmarkdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— [维基百科]\n\n代码块@requires_authorization\ndef somefunc(param1&#x3D;&#39;&#39;, param2&#x3D;0):\n    &#39;&#39;&#39;A docstring&#39;&#39;&#39;\n    if param1 &gt; param2: # interesting\n        print &#39;Greater&#39;\n    return (param2 - param1 + 1) or None\nclass SomeClass:\n    pass\n&gt;&gt;&gt; message &#x3D; &#39;&#39;&#39;interpreter\n... prompt&#39;&#39;&#39;\n\n        sfd\n        sfd\n","slug":"测试一篇文章","date":"2015-01-22T05:11:11.000Z","categories_index":"测试","tags_index":"","author_index":"Lu-ckYoung"},{"id":"3ebfe667b3a28051893c08a8855b6747","title":"JQ无缝滚动","content":"无缝滚动主要是在最后一张图添加第一张图和第一张图添加最后一张来，当图片滚动的marginleft值小于真实的最后到一张时（最后一张后面添加的第一张），就移动到第一张；当图片滚动的marginleft值大于真实第一张时（第一张前面添加的最后一张），就移动到最后一张。 视觉上看起来就是无缝滚动了。实现原理还有很多，直接上代码了。\n\n\n&lt;!docType html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;&lt;/title&gt;\n&lt;meta charset=&quot;utf-8&quot;/&gt;\n\n&lt;style&gt;\nbody,ul,li&#123;\nmargin: 0;\npadding: 0;\n&#125;\n.wrap &#123;\nwidth: 520px;\nheight: 298px;\noverflow: hidden;\nmargin: 120px auto;\nborder: 1px solid deepskyblue;\nposition: relative;\n&#125;\n.wrap ul li &#123;\nfloat: left;\ndisplay: inline;\nwidth: 520px;\n&#125;\n.wrap ul li img &#123;\nwidth: 100%;\nheight: auto;\n&#125;\n.wrap .page &#123;\nposition: absolute;\nbottom: 10px;\nleft: 50%;\ntransform: translateX(-50%);\n-webkit-transform: translateX(-50%);\n&#125;\n.page ul li &#123;\nfloat: left;\nwidth: 10px;\nheight: 10px;\nborder-radius: 100%;\nbackground: #333;\nmargin-right: 10px;\nborder: 1px solid #fff;\n&#125;\n.page ul li.curr &#123;\nbackground: #f38630;\n&#125;\n.prev, .next &#123;\nposition: absolute;\ntop: 50%;\nmargin-top: -20px;\nwidth: 40px;\nheight: 40px;\nbackground: rgba(0, 0, 0, 0.7);\ntext-align: center;\nline-height: 40px;\ncolor: #ffffff;\ncursor: pointer;\n&#125;\n.prev &#123;\nleft: 10px;\n&#125;\n.next &#123;\nright: 10px;\n&#125;\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;wrap&quot;&gt;\n&lt;div class=&quot;goods-list&quot;&gt;\n&lt;ul class=&quot;clearfix&quot; style=&quot;margin-left: -520px&quot;&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-4.jpg&quot; alt=&quot;&quot;/&gt;4\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-1.jpg&quot; alt=&quot;&quot;/&gt;1\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-2.jpg&quot; alt=&quot;&quot;/&gt;2\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-3.jpg&quot; alt=&quot;&quot;/&gt;3\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-4.jpg&quot; alt=&quot;&quot;/&gt;4\n&lt;/li&gt;\n&lt;li&gt;\n&lt;img src=&quot;img/goods-1.jpg&quot; alt=&quot;&quot;/&gt;1\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;page&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li class=&quot;curr&quot;&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;li&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;prev&quot;&gt;左&lt;/div&gt;\n&lt;div class=&quot;next&quot;&gt;右&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=&quot;../js/jquery-2.1.1.min.js&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n$(function () &#123;\nvar goodsList = $(&quot;.goods-list&quot;);\nvar goodsListUl = goodsList.find(&quot;ul&quot;);\nvar liLength = goodsList.find(&quot;li&quot;).length;\nvar liWidth = goodsList.find(&quot;li&quot;).width();\nvar ulWidth = $(&quot;.goods-list ul&quot;).width(liLength * liWidth);\nvar index = 0;\nvar animated = true;\nvar timer;\n$(&quot;.page li&quot;).each(function (i, obj) &#123;\n$(obj).on(&quot;click&quot;, function () &#123;\nif ($(obj).hasClass(&quot;curr&quot;)) &#123;\nreturn;\n&#125; else &#123;\nif (animated) &#123;\n$(obj).addClass(&quot;curr&quot;).siblings().removeClass(&quot;curr&quot;);\nvar currIndex = i;\nconsole.log(i)\nvar offset = (-520) * (currIndex - index)\nindex = currIndex;\nanimate(offset);\n&#125;\n&#125;\n&#125;)\n&#125;);\n\nvar next= $(&quot;.next&quot;).on(&quot;click&quot;, function () &#123;\nmove();\n&#125;);\n$(&quot;.prev&quot;).on(&quot;click&quot;, function () &#123;\nif (animated) &#123;\nif (index == 0) &#123;\nindex = 3;\n&#125; else &#123;\nindex -= 1;\n&#125;\n$(&quot;.page li&quot;).eq(index).addClass(&quot;curr&quot;).siblings().removeClass(&quot;curr&quot;);\nanimate(520);\n&#125;\n&#125;);\nfunction move()&#123;\nif (animated) &#123;\nif (index == 3) &#123;\nindex = 0;\n&#125; else &#123;\nindex += 1;\n&#125;\n$(&quot;.page li&quot;).eq(index).addClass(&quot;curr&quot;).siblings().removeClass(&quot;curr&quot;);\nanimate(-520);\n&#125;\n&#125;\n\n\nfunction animate(offset) &#123;\nanimated = false;\nvar marginL = parseInt(goodsListUl.css(&quot;marginLeft&quot;)) + offset;\n\ngoodsListUl.animate(&#123;\n\nmarginLeft: marginL\n&#125;, 1000, function () &#123;\n                animated = true;\nif (marginL &lt; -2080) &#123;\ngoodsListUl.css(&#123;marginLeft: -520&#125;)\n&#125;\n                if (marginL &gt; -520) &#123;\ngoodsListUl.css(&#123;marginLeft: -2080&#125;)\n&#125;\ndebugger;\n&#125;);\n\n&#125;\nfunction play()&#123;\ntimer=setInterval(move,3000);\n&#125;\nplay();\ngoodsList.on(&#123;mouseover:function()&#123;\n            clearInterval(timer)\n&#125;,mouseout:function()&#123;\nplay()\n&#125;\n&#125;)\n&#125;)\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n","slug":"JQ无缝滚动","date":"2014-12-10T06:45:05.000Z","categories_index":"技术","tags_index":"JQ DOM","author_index":"Lu-ckYoung"},{"id":"05b5d7864f9e3058e6a04eb42e9cfd12","title":"JS clientX,offsetX,screenX,PageX","content":"event对象是JavaScript中最重要的对象之一，他代表了各种事件的状态，在各种事件的事件处理中经常用到。\n用js做拖拽、弹出层、什么之类的少不了用到js的event对象计算位置什么的。先来说说##screenX看看官方解释：screenX 事件属性可返回事件发生时鼠标指针相对于屏幕的水平坐标，大概意思就是表达鼠标指针相对于用户屏幕的X坐标\n##clientX官方解释：clientX 事件属性返回当事件被触发时鼠标指针向对于浏览器页面（或客户区）的水平坐标。这个解释比较模糊了，忽略了很重要一点。人话就是鼠标指针位置相对于浏览器区域的 x 坐标，其浏览器区域不包括头部的控件和滚动条screenX相比就是将参照点改成了浏览器内容区域的左上角，该参照点会随之滚动条的移动而移动(IE事件和标准事件都定义了这2个属性)\n##pageX参照点也是浏览器内容区域的左上角，但它不会随着滚动条而变动`这2个属性不是标准属性，但得到了广泛支持。IE事件中没有这2个属性。\n##offsetX官方解释：发生事件的地点在事件源元素的坐标系统中的x坐标。鼠标指针位置相对于触发事件的对象的x坐标，打个比方就是（相对于触发offsetX事件DOM节点的X坐标）。\n下面在网上找了两张图 给大家看看，便于理解。\n\n","slug":"JS-clientX-offsetX-screenX-PageX","date":"2014-09-10T07:36:26.000Z","categories_index":"技术","tags_index":"JS DOM Event","author_index":"Lu-ckYoung"},{"id":"5de1032283da4a68ad814ae1c25fb259","title":"JS DOM标准事件的三个阶段","content":"#事件阶段1（Event Phases）当一个DOM事件呗触发时，它不是在触发的对象上只触发一次的，而是经历三个阶段。分别为1：一开始从文档的根节点流向目标对象（捕获阶段），2：然后在目标对向上被触发（目标阶段），3：之后再回溯到文档的根节点（冒泡阶段）.如图：\n（图片来源：W3C）\n##事件捕获（Capture Phase）\n事件的第一个阶段是捕获阶段。事件从文档的根节点出发，随着DOM树的结构向事件的目标节点流去。途中经过各个层次的DOM节点，并在各节点上触发捕获事件，直到到达事件的目标节点。捕获阶段的主要任务是建立传播路径，在冒泡阶段，事件会通过这个路径回溯到文档跟节点。\n上几张简单代码图\n将addEventListener(‘event-name’, ‘callback’, ‘use-capture’) 第三个参数，设置为true，让函数在捕获阶段触发\n\n点击box1，触发顺序为 到达了 冒泡中##事件冒泡（Bubble Phase）事件在目标元素上触发后，并不在这个元素上终止。它会随着DOM树一层层向上冒泡，直到到达最外层的根节点。也就是说，同一个事件会依次在目标节点的父节点，父节点的父节点。直到最外层的节点上被触发。上几张简单代码图将第三个参数改为false点击box1，触发顺序为 冒泡中 到达了\n如果box2里面在套一个box3，触发顺序又会怎样呢？多试试几次就知道了。box2的事件第三个参数改为false3个事件监听第三个参数都改为false现在可以得出一个结论：1:true 的触发顺序总是在 false 之前；2:如果多个均为 true，则外层的触发先于内层；3:如果多个均为 false，则内层的触发先于外层。\n##阻止事件冒泡（Stopping Propagation）可以通过调用事件对象的stopPropagation方法，在任何阶段（捕获阶段或者冒泡阶段）中断事件的传播。此后，事件不会在后面传播过程中的经过的节点上调用任何的监听函数。现在点击box  只会触发box3的点击事件了。\n","slug":"JS-DOM标准事件的三个阶段","date":"2014-08-22T03:29:30.000Z","categories_index":"技术","tags_index":"JS DOM","author_index":"Lu-ckYoung"},{"id":"b173c4f9e5cd10dcea20e20af9d5faca","title":"JS拖放元素实例","content":"结合网上例子加Javascript 权威指南第6版 做得DEMO。考了了IE兼容性问题，不过IE早晚淘汰的玩意儿。\n\n\n&lt;!docType html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n    &lt;style type=&quot;text/css&quot;&gt;\n    body&#123;\n    margin: 0;\n    padding: 0;\n    &#125;\n#drag &#123;\n    border: 1px solid blue;\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    &#125;\n    &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n    &lt;div class=&quot;wrap&quot; style=&quot;width: 400px;height: 400px;border: 1px solid darkblue;margin-          top: 40px;position: relative&quot;&gt;\n    &lt;div id=&quot;drag&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n\n    &lt;script&gt;\n    var drag = document.getElementById(&#39;drag&#39;);\n    var wrap = document.getElementsByClassName(&#39;wrap&#39;)[0];\n    var inputX = document.getElementById(&#39;x&#39;);\n    var inputY = document.getElementById(&#39;y&#39;);\n    if (document.attachEvent) &#123;\n    drag.attachEvent(&#39;onmousedown&#39;, dragHandle);\n&#125; else &#123;\n    drag.addEventListener(&#39;mousedown&#39;, dragHandle, false);\n    &#125;\n    function dragHandle(event) &#123;\n    var event = event || window.event;\n    var startX = drag.offsetLeft;\n    var startY = drag.offsetTop;\n    var mouseX = event.clientX;\n    var mouseY = event.clientY;\n\n    var deltaX = mouseX - startX;\n    var deltaY = mouseY - startY;\n\n\n    if (document.attachEvent) &#123;\n    drag.attachEvent(&#39;onmousemove&#39;, moveHandle);\n    drag.attachEvent(&#39;onmouseup&#39;, upHandle);\n    drag.attachEvent(&#39;onlosecapture&#39;, upHandle);\n    drag.setCapture();\n    &#125; else &#123;\ndocument.addEventListener(&#39;mousemove&#39;, moveHandle, true);\n    document.addEventListener(&#39;mouseup&#39;, upHandle, true);\n   &#125;\n    function moveHandle(event) &#123;\n    var event = event || window.event;\n\n   var iL = event.clientX - deltaX;\n    var iT = event.clientY - deltaY;\n\n    var maxL = wrap.clientWidth - drag.offsetWidth;\n    var maxT = wrap.clientHeight - drag.offsetHeight;\n    iL = iL &lt; 0 ? 0 : iL;\n    iL = iL &gt; maxL ? maxL : iL;\n    iT = iT &lt; 0 ? 0 : iT;\n    iT = iT &gt; maxT ? maxT : iT;\n\n    drag.style.left = iL + &quot;px&quot;;\n    drag.style.top = iT + &quot;px&quot;;\n\n&#125;\n\n    function upHandle() &#123;\n    if (document.attachEvent) &#123;\n    drag.detachEvent(&#39;onmousemove&#39;, moveHandle);\n    drag.detachEvent(&#39;onmouseup&#39;, upHandle);\n    drag.detachEvent(&#39;onlosecapture&#39;, upHandle);\n    drag.releaseCapture();\n    &#125; else &#123;\n    document.removeEventListener(&#39;mousemove&#39;, moveHandle, true);\n    document.removeEventListener(&#39;mouseup&#39;, upHandle, true);\n    &#125;\n    &#125;\n\n    &#125;\n    &lt;/script&gt;\n    /body&gt;\n    &lt;/html&gt;\n","slug":"JS拖放元素实例","date":"2014-07-04T08:18:53.000Z","categories_index":"技术","tags_index":"JS DOM","author_index":"Lu-ckYoung"},{"id":"1f67f02ac22aca6507b1510ee1f72fb8","title":"Js Dom 节点操作基础","content":"自己随便写写DOM的操作，虽然很搓，但毕竟是自己用心做出来。还是加深了对DOM操作的理解。\n只有第4个输入框的内容修改后可以添加到节点里，另外三个只是遍历节点把值附过去而已。\n第二次修改内容还是有点小问题，获得的value始终是第4个输入框的值而不是当前需要修改输入框的valu。\n\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;meta charset=&quot;utf-8&quot;/&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=&quot;a&quot; onclick=&quot;a1()&quot;&gt;点击\n    &lt;div class=&quot;b&quot;&gt;ss&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c&quot;&gt;&lt;/div&gt;\n&lt;input type=&quot;text&quot;/&gt;\n&lt;input type=&quot;text&quot;/&gt;\n&lt;input type=&quot;text&quot;/&gt;\n&lt;input  class=&quot;fasong&quot; type=&quot;text&quot;/&gt;\n&lt;button class=&quot;dianji&quot; onclick=&quot;dianji()&quot;&gt;发送&lt;/button&gt;\n&lt;script&gt;\n    var inp=document.getElementsByTagName(&quot;input&quot;);\n    var fasong=document.getElementsByClassName(&quot;fasong&quot;)[0];\n    var oNode=document.createElement(&quot;div&quot;);\n    (&quot;class&quot;,&quot;wenBen&quot;);\n    var oNode1=document.createElement(&quot;div&quot;);\n    oNode1.setAttribute(&quot;class&quot;,&quot;wenBen1&quot;);\n    var oText=document.createTextNode(&quot;This a LY&quot;);\n    var oText1=document.createTextNode(&quot;This a LYY&quot;);\n    var a=document.getElementsByClassName(&quot;a&quot;)[0];\n    var b=document.getElementsByClassName(&quot;b&quot;)[0];\n    var div=document.getElementsByClassName(&quot;c&quot;)[0];\n    oNode.appendChild(oText);\n    a.insertBefore(oNode,b);\n    oNode1.appendChild(oText1);\n    a.replaceChild(oNode1,b);\n    for(var i=0;i&lt;inp.length;i++)&#123;\n    inp[i].value=oText1.nodeValue\n    &#125;\n    var c=0;\n    function a1()&#123;\n    c++;\n    if(c%2==1)&#123;\n        oNode.innerHTML=&quot;SB&quot;\n    &#125;else&#123;\n        oNode.innerHTML=&quot;This a LY&quot;\n    &#125;\n    &#125;\n    function dianji()&#123;\n    var content=document.createElement(&quot;div&quot;);\n    content.setAttribute(&quot;class&quot;,&quot;cont&quot;)\n    var contentwenben=document.createTextNode(fasong.value);\n    content.appendChild(contentwenben);\n    content.innerHTML=fasong.value+&quot;&lt;button onclick=&#39;del(this)&#39;&gt;删除&lt;/button&gt; &lt;button     onclick=&#39;xiugai(this)&#39;&gt;修改&lt;/button&gt;&quot;;\n    div.appendChild(content)\n\n    function del(dom)&#123;\n    dom.parentNode.remove();\n    &#125;\n    function xiugai(dom)&#123;\n      var parent=dom.parentNode;\n      parent.innerHTML=&quot;&lt;input class=&#39;upcontent&#39;  type=&#39;text&#39;/&gt; &lt;button             onclick=&#39;yes(this)&#39;&gt;确定&lt;/button&gt;&quot;;\n      var upcontent=document.getElementsByClassName(&quot;upcontent&quot;);\n    var contentwenben=document.createTextNode(fasong.value);\n    for(var j=0;j&lt;upcontent.length;j++)&#123;\n        upcontent[j].value=contentwenben.nodeValue;\n    &#125;\n    &#125;\n    function yes(dom)&#123;\n    var upcontent=document.getElementsByClassName(&quot;upcontent&quot;)[0];\n       var parent=dom.parentNode;\n       parent.innerHTML=upcontent.value+&quot;&lt;button onclick=&#39;del(this)&#39;&gt;删除&lt;/button&gt;         &lt;button onclick=&#39;xiugai(this)&#39;&gt;修改&lt;/button&gt;&quot;\n    &#125;\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n大家感兴趣 可以复制代码试试  很基础的玩意儿。\n","slug":"Js-Dom-节点操作基础","date":"2014-06-28T02:45:54.000Z","categories_index":"技术","tags_index":"JS DOM","author_index":"Lu-ckYoung"}]